# ==================================================
# Example Configuration for Hospital Management System
# ==================================================
# Rename this file to "application.properties" and
# fill in your actual values for database credentials
# and the JWT secret key before running the application.
# Ensure the real "application.properties" is listed
# in your .gitignore file.
# ==================================================

# Server Port
server.port=8080

# --- Database Configuration ---
# Replace placeholders with your MySQL details
spring.datasource.url=jdbc:mysql://localhost:3306/healthcare_db?createDatabaseIfNotExist=true
spring.datasource.username=YOUR_DB_USERNAME
spring.datasource.password=YOUR_DB_PASSWORD
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- JPA/Hibernate Configuration ---
# 'update': Updates schema automatically (Development)
# 'validate': Validates schema, doesn't make changes (Safer)
# 'none': Does nothing (Production)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true # Show SQL logs (true for dev, false for prod)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true # Format SQL logs

# --- Thymeleaf Configuration ---
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# Disable caching during development for easier template changes
spring.thymeleaf.cache=false

# --- Swagger UI Path Configuration ---
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# --- JWT Configuration ---
# IMPORTANT: Replace placeholder with a strong, secure, Base64-encoded secret key.
# Generate one using online tools or code (e.g., Base64 encoded 512-bit key for HS512).
# Store the real secret securely (e.g., environment variable, config server) for production.
jwt.secret=YOUR_BASE64_ENCODED_JWT_SECRET_HERE_REPLACE_THIS
# Expiration time in milliseconds (Default: 24 hours = 86400000)
jwt.expirationMs=86400000

# --- Optional File Upload Configuration ---
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=10MB